name: Update Commits

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'README.md'
  workflow_dispatch:

jobs:
  update-commits:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Fetch recent commits
      run: |
        echo "[]" > commits.json
        REPOS=$(curl -s https://api.github.com/users/CellIJel/repos | jq -r '.[].full_name')
        for REPO in $REPOS; do
          COMMITS=$(curl -s https://api.github.com/repos/$REPO/commits | jq -r 'map(select(.commit.author.name != "GitHub Actions")) | .[] | {repo: "'$REPO'", message: .commit.message, author: .commit.author.name, date: .commit.author.date}')
          echo $COMMITS | jq -s . >> commits.json
        done
        # Include commits from the current repository, excluding actions-user commits
        CURRENT_REPO_COMMITS=$(curl -s https://api.github.com/repos/CellIJel/Updates/commits | jq -r 'map(select(.commit.author.email != "actions@github.com" and .commit.author.name != "GitHub Actions")) | .[] | {repo: "CellIJel/Updates", message: .commit.message, author: .commit.author.name, date: .commit.author.date}')
        echo $CURRENT_REPO_COMMITS | jq -s . >> commits.json
        # Merge all arrays into a single array, remove duplicates, and limit to the latest 30 commits
        jq -s 'add | unique_by(.repo, .message, .author, .date) | sort_by(.date) | reverse | .[:30]' commits.json > tmp.json && mv tmp.json commits.json

    - name: Check Committer
      run: |
        if [[ "$(git log -1 --pretty=format:'%ce')" == "actions@github.com" ]]; then
          echo "Commit from actions-user, skipping workflow."
          exit 0
        fi

    - name: Commit and push changes
      env:
        GH_T: ${{ secrets.GH_T }}
      run: |
        git config --local user.email "actions@github.com"
        git config --local user.name "GitHub Actions"
        git add commits.json
        git commit -m "Update commits"
        git push https://x-access-token:${GH_T}@github.com/CellIJel/Updates.git

    - name: Trigger GitHub Pages Workflow
      if: success()
      run: |
        curl -X POST \
          -H "Accept: application/vnd.github.v3+json" \
          -H "Authorization: token ${{ secrets.GH_T }}" \
          https://api.github.com/repos/CellIJel/Updates/actions/workflows/github-pages.yml/dispatches \
          -d '{"ref":"main"}'
